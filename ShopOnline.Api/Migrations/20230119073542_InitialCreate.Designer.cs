// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ShopOnline.Api.Data;

#nullable disable

namespace ShopOnline.Api.Migrations
{
    [DbContext(typeof(ShopOnlineContext))]
    [Migration("20230119073542_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ShopOnline.Api.Entities.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Carts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            UserId = 2
                        },
                        new
                        {
                            Id = 3,
                            UserId = 3
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CartId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "International Blended Whisky",
                            ImageURL = "/Images/Whisky/1.png",
                            Name = "OakSmith Gold",
                            Price = 1445m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Luxury Premium Whisky",
                            ImageURL = "/Images/Whisky/1.png",
                            Name = "Mcdowell's No 1",
                            Price = 640m,
                            Qty = 80
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Flavoured Lemon Grass and Ginger",
                            ImageURL = "/Images/Vodka/1.png",
                            Name = "Magic Moments",
                            Price = 800m,
                            Qty = 90
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Plain Classic Vodka",
                            ImageURL = "/Images/Vodka/1.png",
                            Name = "Smirnoff",
                            Price = 1560m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 3,
                            Description = "Flavoured Classic Gin",
                            ImageURL = "/Images/Gin/1.png",
                            Name = "American Duet",
                            Price = 400m,
                            Qty = 90
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "London Dry Gin",
                            ImageURL = "/Images/Gin/1.png",
                            Name = "Bombay Sapphire",
                            Price = 2450m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 4,
                            Description = "All Time Classic Dark Rum",
                            ImageURL = "/Images/Rum/1.png",
                            Name = "Old Monk Gold",
                            Price = 1445m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "White Apple Flavoured Rum",
                            ImageURL = "/Images/Rum/1.png",
                            Name = "Bacardi White",
                            Price = 1445m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 5,
                            Description = "Mild Beer",
                            ImageURL = "/Images/Beer/1.png",
                            Name = "Kingfisher Ultra",
                            Price = 1445m,
                            Qty = 100
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 5,
                            Description = "Super Strong Beer",
                            ImageURL = "/Images/Beer/1.png",
                            Name = "Budweiser Magnum",
                            Price = 1445m,
                            Qty = 100
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.ProductCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Whisky"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Vodka"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Gin"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Rum"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Beer"
                        });
                });

            modelBuilder.Entity("ShopOnline.Api.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            UserName = "Mihir"
                        },
                        new
                        {
                            Id = 2,
                            UserName = "Shreyas"
                        },
                        new
                        {
                            Id = 3,
                            UserName = "Bhavesh"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
